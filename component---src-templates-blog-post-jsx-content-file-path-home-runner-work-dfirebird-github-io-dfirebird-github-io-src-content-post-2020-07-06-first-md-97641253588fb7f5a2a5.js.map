{"version":3,"file":"component---src-templates-blog-post-jsx-content-file-path-home-runner-work-dfirebird-github-io-dfirebird-github-io-src-content-post-2020-07-06-first-md-97641253588fb7f5a2a5.js","mappings":"mMAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,OAAQ,SACRC,IAAK,QACJC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2CAA4C,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,iFAAkF,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,sIAAuI,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,0GAA2G,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,MAAOK,EAAAA,cAAoBR,EAAYI,OAAQ,KAAM,sBAAuB,iCAAkC,KAAMI,EAAAA,cAAoBR,EAAYK,IAAK,CAC7xBI,IAAK,6FACLC,IAAK,oBAOT,MAJA,SAAoBX,QAAY,IAAZA,IAAAA,EAAQ,IAC1B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,IAAII,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWb,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,I,oBCX9H,SAASc,EAAT,GAAoC,IAAlB,KAACC,EAAD,SAAOC,GAAWC,EAClC,MAAMC,EAAOH,EAAKI,IAClB,OAAOV,EAAAA,cAAoBW,EAAAA,EAAQ,CACjCC,SAAUH,EAAKI,YAAYC,MAC3BC,UAAWN,EAAKI,YAAYC,OAC3Bd,EAAAA,cAAoB,KAAM,CAC3BgB,UAAWC,EAAAA,GACV,iBAAkBR,EAAKI,YAAYK,MAAOlB,EAAAA,cAAoB,MAAO,CACtEgB,UAAWC,EAAAA,GACVV,IAEU,SAASY,EAAiB5B,GACvC,OAAOS,EAAAA,cAAoBK,EAAUd,EAAOS,EAAAA,cAAoBoB,EAAqB7B,M,8NChB5E8B,EAAY,kCACZC,EAAS,+BACTC,EAAM,4BACNC,EAAY,kCACZC,EAAa,mC,oBCuCxB,MAtCA,YAAiE,IAAjD,SAAEb,EAAF,UAAYG,EAAZ,YAAuBW,EAAvB,SAAoCnB,GAAY,EAC9D,OACE,uBAAKS,UAAWC,GACd,gBAAC,IAAD,CAAKH,MAAOF,EAAUc,YAAaA,IACnC,gBAACC,EAAA,EAAD,CACEC,OAAQ,CAAEC,SAAU,WAAYC,MAAO,EAAGC,IAAK,EAAGC,OAAQ,UAE5D,uBAAKhB,UAAWC,GACd,uBAAKD,UAAWC,GACd,gBAAC,EAAAgB,KAAD,CAAMC,GAAG,KACP,sDAIJ,uBAAKlB,UAAWC,GACd,2BACE,gBAAC,EAAAgB,KAAD,CAAMC,GAAG,UAAT,SACA,gBAAC,EAAAD,KAAD,CAAMC,GAAG,SAAT,QACA,gBAAC,EAAAD,KAAD,CAAMC,GAAG,aAAT,eAIN,uBAAKlB,UAAWC,EAAAA,OACd,0BAAKF,IAENR,EACD,uBAAKS,UAAWC,GACd,kFACyD,IACvD,qBAAGkB,KAAK,6BAAR,UAFF,+BAGW,IACT,qBAAGA,KAAK,oDAAR,e,4ECpCH,IAAIC,EAAU,mCACVlB,EAAO,iC,oEC8BX,MAAMmB,EAAa,gBAAoB,IAiCvC,SAASC,EAAiBvC,GAC/B,MAAMwC,EAAoB,aAAiBF,GAE3C,OAAO,WAAc,IAEO,mBAAftC,EACFA,EAAWwC,GAGb,IAAIA,KAAsBxC,IAChC,CAACwC,EAAmBxC","sources":["webpack://dfirebird.github.io/./src/content/post/2020-07-06-first.md","webpack://dfirebird.github.io/./src/templates/blog-post.jsx","webpack://dfirebird.github.io/./src/components/layout.module.css","webpack://dfirebird.github.io/./src/components/layout.jsx","webpack://dfirebird.github.io/./src/templates/blog-post.module.css","webpack://dfirebird.github.io/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Hello guys! This is first my blog post.\"), \"\\n\", React.createElement(_components.p, null, \"Since this the first post I'm gonna just make an introduction about the blog.\"), \"\\n\", React.createElement(_components.p, null, \"I created the blog to share my experience I encounter while programming and may\\ntalk about things other than programming as well.\"), \"\\n\", React.createElement(_components.p, null, \"I intended to post bimonthly or sometimes trimonthly, it depends on me getting\\na topic to blog about.\"), \"\\n\", React.createElement(_components.p, null, \"So \", React.createElement(_components.strong, null, \"welcome to my blog\"), \" and enjoy reading my content\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://media1.tenor.com/images/eb79ff00fbef216aecfccc8916fc10fb/tenor.gif?itemid=14855447\",\n    alt: \"nezuko running\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/dfirebird.github.io/dfirebird.github.io/src/content/post/2020-07-06-first.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport * as Styles from \"./blog-post.module.css\";\nimport Layout from \"../components/layout.jsx\";\nfunction BlogPost({data, children}) {\n  const post = data.mdx;\n  return React.createElement(Layout, {\n    tabTitle: post.frontmatter.title,\n    pageTitle: post.frontmatter.title\n  }, React.createElement(\"h5\", {\n    className: Styles.date\n  }, \"Published on: \", post.frontmatter.date), React.createElement(\"div\", {\n    className: Styles.content\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      body\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        title\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var footer = \"layout-module--footer--ad7d0\";\nexport var nav = \"layout-module--nav--7fd4b\";\nexport var nav__left = \"layout-module--nav__left--4a8c5\";\nexport var nav__right = \"layout-module--nav__right--ef10f\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as Styles from \"./layout.module.css\"\nimport SEO from \"./seo\"\nimport ThemeToggle from \"./ThemeToggle\"\n\nfunction Layout({ tabTitle, pageTitle, description, children }) {\n  return (\n    <div className={Styles.container}>\n      <SEO title={tabTitle} description={description} />\n      <ThemeToggle\n        styles={{ position: \"absolute\", right: 0, top: 0, margin: \"15px\" }}\n      />\n      <div className={Styles.nav}>\n        <div className={Styles.nav__left}>\n          <Link to=\"/\">\n            <h3>A Programmer's Journey</h3>\n          </Link>\n        </div>\n\n        <div className={Styles.nav__right}>\n          <nav>\n            <Link to=\"/about\">About</Link>\n            <Link to=\"/blog\">Blog</Link>\n            <Link to=\"/projects\">Projects</Link>\n          </nav>\n        </div>\n      </div>\n      <div className={Styles.title}>\n        <h1>{pageTitle}</h1>\n      </div>\n      {children}\n      <div className={Styles.footer}>\n        <footer>\n          Aadhish Sriram &copy; 2022. This website is built with{\" \"}\n          <a href=\"https://www.gatsbyjs.org/\">Gatsby</a>. The source can be\n          found on{\" \"}\n          <a href=\"https://github.com/dfireBird/dfireBird.github.io\">Github</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","// extracted by mini-css-extract-plugin\nexport var content = \"blog-post-module--content--91571\";\nexport var date = \"blog-post-module--date--62da1\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","img","_provideComponents","components","React","src","alt","wrapper","MDXLayout","BlogPost","data","children","_ref","post","mdx","Layout","tabTitle","frontmatter","title","pageTitle","className","Styles","date","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","container","footer","nav","nav__left","nav__right","description","ThemeToggle","styles","position","right","top","margin","Link","to","href","content","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}