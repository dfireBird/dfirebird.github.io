{"componentChunkName":"component---src-templates-projects-jsx","path":"/projects/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Personal Website\"), mdx(\"p\", null, \"Personal website made with Gatsby which act both as a portfolio and a blog.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Language used: Javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Libraries or frameworks: React and Gatsby\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Source: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/dfirebird/dfirebird.github.io\"\n  }), \"Github\"), \".\")), mdx(\"hr\", null), mdx(\"h3\", null, \"birdtorrent_rs\"), mdx(\"p\", null, \"Implementation of BitTorrent protocol (BitTorrent client).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Language used: Rust\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Libraries or frameworks: Reqwest and tokio\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Source: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/dfirebird/birdtorrent_rs\"\n  }), \"Github\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Scrapddit\"), mdx(\"p\", null, \"A CLI which retrieves reddit posts from a subreddit or popular feed using Reddit API.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Language used: Javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Libraries or Frameworks: Snoowrap\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Source: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/dfireBird/scrapddit\"\n  }), \"Github\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Programmer News Bot\"), mdx(\"p\", null, \"A Telegram bot which retrieves top posts from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://news.ycombinator.com/\"\n  }), \"Hacker News\"), \" and sends it to user at specified intervals.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Language used: Javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Source: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/dfireBird/programmer-news-bot\"\n  }), \"Github\"))), mdx(\"hr\", null), mdx(\"h3\", null, \"Hacker News Wrapper\"), mdx(\"p\", null, \"A wrapper around Hacker News API to use in the Programmer News Bot project.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Language used: Javascript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Source: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/dfireBird/hacker-news-wrapper\"\n  }), \"Github\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/projects/"}}}